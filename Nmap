Nmap 
An in depth look at scanning with Nmap, a powerful network scanning tool. 

When attacking a box it is good to have as much knowledge as possible. 

Steps
 -Gather IPs
 -Find out what services are running
 
 Services are run on ports. Tell Tell ports can give up info such as machines running web servers or active directory domain controllers. 
 These provide more info giving greater insight into whats happening on the target. 
 
 Common ports
 HTTP 80
 HTTPS 443
 NETBIOS 139
 SMB 445
 
 In an Nmap port scan each port will be determined as open, closed, or filtered (usually by a firewall) 
 
 Once open ports are known we can start research for the enumeration phase. 
 
 - Nmap Switches -
 To perform a stealth scan use -sS
 To scan UDP use -sU
 If you wanted to detect a operating system you would use the switch -O
 To determine what version of a service is running use -sV
 To get more information or verbosity utilize -v for even more info use -vv
 Ideally scans will only be ran once. To output the scan in 3 major formats use -oA <basename> 
 To output in a normal format use -oN <file>
 To output into a grepable format use -oG <file>
 If being  loud is not an issue we can enable aggressive mode by using -A
 Another way to be loud is to speed up the scan. The faster the scan the more loud and prone to errors. You can adjust speed using -T1 through -T5. The higher the number the faster the scan
 To scan a specific port or port range use -p <Port number> or -p <port-range> 
 *Not in the help feature* to tell Nmap to scan all ports use -p-
 To activate a script with the Nmap library utilize --script
 Activating scripts in the vuln category would be --script=vuln
 
 - TCP Connect Scans -
 -sT attempts a full three way handshake
 RFC 793
 When a SYN flag is sent to a target that has a closed port it gets an RST flag back. 
 When a SYN flag is sent to a target that has a open port it receives a SYN/ACK flag back. 
 When a port is being protected by a firewall it will drop incoming packets indicating that it is being filtered. 
 It is also easy to set firewalls to return filtered packets with an RST flage making it near impossible to get an accurate reading on a target. 
 
 - SYN Scans -
 SYN scans are not a full three way handshake. The attacking machine responds to the SYN/ACk from the target with a RST flag. 
 
 Advantages for SYN scans:
 Are that older IDS systems will not recognize it as they are looking for a full 3 way handshake.
 Applications typically are configured to log full connections and not probes. 
 Since the full 3 way handshake is not completed the scan is significantly faster. 
 
 Disadvantages: 
 Requires sudo permissions in linux. 
 Unstable services can be brough down if testing in a production enviornment. 
 
 If run with sudo permissions SYN scans are ran. If not the TCP Connect scans are run. 
 
 - UDP Scans -
 Normally UDP does not receive a response and that is labeled as open|filtered. If it does the port is marked open. 
 UDP scans tend to be incredible slow. 
 Typically this will be a very targeted scan. An example is "nmap -sU --top-ports 20 <target>"
 
 - NULL, FIN, and Xmas -
 As the name suggests, NULL scans (-sN) are when the TCP request is sent with no flags set at all. As per the RFC, the target host should respond with a RST if the port is closed.
 
 FIN scans (-sF) work in an almost identical fashion; however, instead of sending a completely empty packet, a request is sent with the FIN flag (usually used to gracefully close an active connection). Once again, Nmap expects a RST if the port is closed.
 
 As with the other two scans in this class, Xmas scans (-sX) send a malformed TCP packet and expects a RST response for closed ports. It's referred to as an xmas scan as the flags that it sets (PSH, URG and FIN) give it the appearance of a blinking christmas tree when viewed as a packet capture in Wireshark. 
 
 - ICMP Network Scanning -
 The main objective in a blackbox excercise is to create a map of the enviornment. To do this we will use a ping sweep. This is not 100% accurate but gives a good baseline to go off of. 
 To do a ping sweep use -sn with the IP ranges which can be specified by a hyphen or CIDR notation. 
 nmap -sn 192.168.0.1-254 or nmap -sn 192.168.0.0/24
 
 - NSE Scripts -
 NSE = Nmap Scripting Engine
 NSE scripts are written in the Lua language and can be used from scanning for vulns to automating exploits. 
 
 There are many categories
  --script=safe   safe:- Won't affect the target
  --script=intrusive  intrusive:- Not safe: likely to affect the target
  --script=vuln  vuln:- Scan for vulnerabilities
  --script=exploit  exploit:- Attempt to exploit a vulnerability
  --script=auth  auth:- Attempt to bypass authentication for running services (e.g. Log into an FTP server anonymously)
  --script=brute  brute:- Attempt to bruteforce credentials for running services
  --script=discovery  discovery:- Attempt to query running services for further information about the network (e.g. query an SNMP server).
 
 There are two ways to search for installed scripts.
 1:One is by using the /usr/share/nmap/scripts/script.db file. 
 ex:grep "ftp" /usr/share/nmap/scripts/script.db
 2:The second way to search for scripts is quite simply to use the ls command.
 ex:ls -l /usr/share/nmap/scripts/*ftp*
 
 
 
 
